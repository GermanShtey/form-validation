{"version":3,"sources":["UI/Input/Input.module.css","containers/Auth/Auth.module.css","UI/Button/Button.module.css","UI/Button/Button.js","UI/Input/Input.js","containers/Auth/Auth.js","form/formFramework.js","hocs/Auxiliary/Auxiliary.js","UI/Select/Select.js","containers/QuizCreator/QuizCreator.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/FinishedQuiz/FinishedQuiz.js","containers/Quiz/Quiz.js","components/MenuToggle/MenuToggle.js","UI/Backdrop/Backdrop.js","components/Drawer/Drawer.js","hocs/Layout/Layout.js","containers/QuizList/QuizList.js","App.js","index.js"],"names":["module","exports","Button","type","disabled","onClick","children","className","cls","classes","button","join","isInvalid","valid","touched","shouldValidate","Input","label","value","onChange","error","inputType","input__wrapper","htmlFor","Math","random","push","input__wrapper_invalid","id","input__input","input__span","Auth","useState","email","validations","required","password","minLength","formControls","setFormControls","isFormValid","setIsFormValid","onChangeHandler","evt","controlName","formControlsTemp","control","target","isValid","trim","is","length","validateControl","Object","keys","forEach","name","auth","auth__title","auth__form","onSubmit","map","index","e","createControl","config","validation","validateForm","hasOwnProperty","Auxiliary","props","Select","options","option","text","createOptionControl","number","createFormControls","question","option1","option2","option3","option4","QuizCreator","quiz","rightAnswerId","state","setState","select","prevValue","preventDefault","validate","concat","questionItem","answers","console","log","AnswerItem","answer","onAnswerClick","answerItemClassName","AnswersList","answersList","ActiveQuiz","quizLength","answerNumber","stateAnswer","FinishedQuiz","result","onRetry","successCount","reduce","total","key","quizItem","iconClassName","to","Quiz","activeQuestion","setActiveQuestion","answerState","setAnswerState","isFinished","setIsFinished","setResult","answerId","prevState","timeout","window","setTimeout","clearTimeout","MenuToggle","onToggle","menuBtnClassName","isOpen","Backdrop","links","exact","Drawer","onClose","renderLinks","link","activeClassName","Layout","isOpened","setIsOpened","toggleMenuHandler","QuizList","App","path","app","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9baaef77.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input__wrapper\":\"Input_input__wrapper__1aqzC\",\"input__label\":\"Input_input__label__1MdJN\",\"input__input\":\"Input_input__input__3FaK1\",\"input__span\":\"Input_input__span__3RzkP\",\"input__wrapper_invalid\":\"Input_input__wrapper_invalid__28Ghe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"Auth_auth__IdtOT\",\"auth__title\":\"Auth_auth__title__1jeeB\",\"auth__form\":\"Auth_auth__form__2T-3g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2KCMa\",\"error\":\"Button_error__2Hu3H\",\"success\":\"Button_success__sgFlS\",\"primary\":\"Button_primary__3Xfmw\"};","import React from 'react';\nimport classes from './Button.module.css';\n\nconst Button = ({type, disabled, onClick, children, className}) => {\n  const cls = [\n    classes.button,\n    classes[type],\n    className,\n  ];\n\n  return (\n    <button\n      onClick={onClick}\n      className={cls.join(' ')}\n      disabled={disabled}\n    >\n      {children}\n    </button>\n  );\n}\n\nexport default Button;\n","import React from 'react';\nimport classes from './Input.module.css';\n\n\nconst isInvalid = (valid, touched, shouldValidate) => {\n  return !valid && shouldValidate && touched\n}\n\nexport const Input = ({ type, label, value, onChange, error, valid, touched, shouldValidate}) => {\n  const inputType = type || 'text';\n  const cls = [classes.input__wrapper];\n  const htmlFor = `${inputType}-${Math.random()}`;\n\n  if(isInvalid( valid, touched, shouldValidate)) {\n    cls.push(classes.input__wrapper_invalid);\n  }\n\n  return(\n    <div className={cls.join(' ')}>\n      <label htmlFor={htmlFor}>{label}</label>\n      <input\n        id={htmlFor}\n        type={inputType}\n        value={value}\n        onChange={onChange}\n        className={classes.input__input}\n      />\n\n      {\n        isInvalid( valid, touched, shouldValidate)\n          ? <span className={classes.input__span}>\n            { error  || 'Введите верное значение'}\n        </span>\n          : null\n      }\n    </div>\n  )\n}\n","import React, { useState } from 'react';\nimport classes from './Auth.module.css';\nimport Button from '../../UI/Button/Button';\nimport { Input } from \"../../UI/Input/Input\";\nimport is from 'is_js';\n\nexport const Auth = () => {\n\n  const initValues = {\n    email: {\n      value: '',\n      type: 'email',\n      label: 'Email',\n      error: 'Введите корректный email',\n      valid: false,\n      touched: false,\n      validations: {\n        required: true,\n        email: true,\n      }\n    },\n    password: {\n      value: '',\n      type: 'password',\n      label: 'Password',\n      error: 'Введите корректный пароль',\n      valid: false,\n      touched: false,\n      validations: {\n        required: true,\n        minLength: 6,\n      }\n    }\n  }\n\n  const [formControls, setFormControls] = useState(initValues);\n  const [isFormValid, setIsFormValid] = useState(false);\n\n  const handlerLogin = () => {\n\n  }\n\n  const handlerRegister = () => {\n\n  }\n\n  const handlerSubmit = () => {\n\n  }\n\n  //определяем валидный inputs\n  const validateControl = (value, validations) => {\n    //валидировать control не нужно\n    if(!validations) {\n      return true\n    }\n\n    let isValid = true;\n\n    if(validations.required) {\n      isValid = (value.trim() !== '') && isValid;\n    }\n\n    if(validations.email) {\n      isValid = is.email(value) && isValid;\n    }\n\n    if(validations.minLength) {\n      isValid = (value.length >= validations.minLength) && isValid;\n    }\n\n    return isValid;\n  }\n\n  //обработчик событий inputs\n  const onChangeHandler = (evt, controlName) => {\n    const formControlsTemp = {...formControls};\n    const control = formControlsTemp[controlName];\n\n    control.value = evt.target.value;\n    control.touched = true;\n    control.valid = validateControl(control.value, control.validations);\n\n    //определяем валидность каждого input для валидации формы\n    Object.keys(formControlsTemp).forEach(name => {\n      setIsFormValid(formControlsTemp[name].valid)\n    })\n\n    setFormControls(formControlsTemp);\n  }\n\n  //создаем inputs\n  const renderInputs = () => {\n    return Object.keys(formControls).map((controlName, index) => {\n      const control = formControls[controlName];\n      return <Input\n        key={controlName + index}\n        type={control.type}\n        value={control.value}\n        valid={control.valid}\n        touched={control.touched}\n        label={control.label}\n        shouldValidate={!!control.validations}\n        error={control.error}\n        onChange={e => onChangeHandler(e, controlName)}\n      />\n    })\n  }\n\n  return(\n    <div className={classes.auth}>\n      <div>\n        <h1 className={classes.auth__title}>Авторизация</h1>\n        <form\n          className={classes.auth__form}\n          onSubmit={handlerSubmit}\n        >\n          {renderInputs()}\n          <Button\n            type=\"success\"\n            onClick={handlerLogin}\n            disabled={!isFormValid}\n          >\n            Войти\n          </Button>\n          <Button\n            type='success'\n            onClick={handlerRegister}\n            disabled={!isFormValid}\n          >\n            Авторизоваться\n          </Button>\n        </form>\n      </div>\n    </div>\n  )\n}\n","export const createControl = (config, validation) => {\n  return {\n    ...config,\n    validation,\n    valid: !validation,\n    touched: false,\n    value: '',\n  }\n}\n\nexport const validate = (value, validation = null ) => {\n  if(!validation) return true;\n\n  let isValid = true;\n\n  if(validation.required) {\n    isValid = value.trim() !== '' && isValid;\n  }\n\n  return isValid;\n}\n\nexport const validateForm = (formControls) => {\n  let isFormValid = true;\n\n  for (let control in formControls) {\n    if (formControls.hasOwnProperty(control)) {\n      isFormValid = formControls[control].valid && isFormValid;\n    }\n  }\n\n  return isFormValid;\n}\n","import React from 'react';\n\nexport const Auxiliary = (props) => props.children;\n","import React from 'react';\nimport './Select.css';\n\nexport const Select = ({ label, value, onChange, options }) => {\n  const htmlFor = `${label}-${Math.random()}`\n\n  return(\n    <div className={'select'}>\n      <label\n        htmlFor={ htmlFor }\n        className={'select__label'}\n      > { label } </label>\n      <select\n        id={ htmlFor }\n        value={ value }\n        onChange={ onChange }\n        className={'select__item'}\n      >\n        { options.map((option, index) => (\n            <option\n              value={ option.value }\n              key={ option.value + index }\n            >\n              { option.text }\n            </option>\n          )) }\n      </select>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport './QuizCreator.css';\nimport Button from \"../../UI/Button/Button\";\nimport { createControl, validate, validateForm } from \"../../form/formFramework\";\nimport { Input } from \"../../UI/Input/Input\";\nimport { Auxiliary } from '../../hocs/Auxiliary/Auxiliary';\nimport { Select } from \"../../UI/Select/Select\";\n\n\n//создаем опции для input\nconst createOptionControl = (number) => {\n  return createControl({\n    label: `Вариант ${number}`,\n    error: 'Значение не может быть пустым',\n    id: number,\n  }, { required: true })\n}\n\n//создаем контролы формы, для определения валидности\nconst createFormControls = () => ({\n    question: createControl({\n      label: 'Введите вопрос',\n      error: 'Вопрос не может быть пустым',\n    }, { required: true }),\n    option1: createOptionControl(1),\n    option2: createOptionControl(2),\n    option3: createOptionControl(3),\n    option4: createOptionControl(4),\n  });\n\nexport const QuizCreator = () => {\n\n  const [state, setState] = useState({\n    quiz: [],\n    isFormValid: false,\n    rightAnswerId: 1,\n    formControls: createFormControls(),\n  });\n\n  const onChangeHandler = (value, controlName) => {\n    const formControls = {...state.formControls};\n    const control = {...formControls[controlName]};\n    control.touched = true;\n    control.value = value;\n    control.valid = validate(control.value, control.validation);\n    formControls[controlName] = control;\n\n    setState(prevValue => ({\n        ...prevValue,\n        formControls,\n        isFormValid: validateForm(formControls),\n      })\n    );\n  }\n\n  const selectChangeHandler = (evt) => {\n    setState(prevValue => ({...prevValue, rightAnswerId: +evt.target.value}));\n  }\n\n  const renderInputs = () => {\n    return Object.keys(state.formControls).map((controlName, index) => {\n      const control = state.formControls[controlName];\n\n      return<Auxiliary key={controlName + index}>\n        <Input\n          label={control.label}\n          value={control.value}\n          valid={control.valid}\n          shouldValidate={!!control.validation}\n          touched={control.touched}\n          error={control.error}\n          onChange={e => onChangeHandler(e.target.value, controlName)}\n        />\n        { index === 0 ? <hr /> : null }\n      </Auxiliary>\n    });\n  }\n\n  const select = <Select\n    label='Выберите правильный ответ'\n    value={state.rightAnswerId}\n    onChange={selectChangeHandler}\n    options={[\n      {text: 1, value: 1},\n      {text: 2, value: 2},\n      {text: 3, value: 3},\n      {text: 4, value: 4},\n    ]}\n  />;\n\n  const submitHandler = (evt) => {\n    evt.preventDefault();\n  }\n\n  const addQuestionHandler = (evt) => {\n    evt.preventDefault();\n\n    const quiz = state.quiz.concat();\n    const index = quiz.length + 1;\n\n    const { question, option1, option2, option3, option4 } = state.formControls;\n\n    const questionItem = {\n      question: question.value,\n      id: index,\n      answers: [\n        {text: option1.value, id: option1.id},\n        {text: option2.value, id: option2.id},\n        {text: option3.value, id: option3.id},\n        {text: option4.value, id: option4.id},\n      ]\n    }\n\n    quiz.push(questionItem);\n    setState({\n      quiz,\n      isFormValid: false,\n      rightAnswerId: 1,\n      formControls: createFormControls(),\n    })\n  }\n\n  const createQuizHandler = (evt) => {\n    evt.preventDefault();\n\n    console.log(state.quiz)\n  }\n\n  return (\n    <div className={'quiz-creator'}>\n      <div className={'quiz-creator__wrapper'}>\n        <h1\n          className={'quiz-creator__title'}\n        >Quiz Creator</h1>\n\n        <form\n          className={'quiz-creator__form'}\n          onSubmit={submitHandler}\n        >\n\n          {renderInputs()}\n\n          {select}\n          <Button\n            type='primary'\n            onClick={addQuestionHandler}\n            disabled={!state.isFormValid}\n          >\n            Добавить вопрос\n          </Button>\n          <Button\n            type='success'\n            onClick={createQuizHandler}\n            disabled={state.quiz === 0}\n          >\n            Создать тест\n          </Button>\n        </form>\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\nimport './AnswerItem.css';\n\nexport const AnswerItem = ({answer, onAnswerClick, state}) => {\n  const answerItemClassName = ['answer-item'];\n\n  if(state) {\n   answerItemClassName.push(`answer-item_${state}`);\n  }\n\n  return (\n    <li\n      className={answerItemClassName.join(' ')}\n      onClick={() => onAnswerClick(answer.id)}\n    >\n      {answer.text}\n    </li>\n  )\n}\n","import React from 'react';\nimport './AnswersList.css';\nimport { AnswerItem } from \"./AnswerItem/AnswerItem\";\n\nexport const AnswersList = ({ answers, onAnswerClick, state }) => {\n\n  const answersList = answers.map((answer, id) => <AnswerItem\n    key={id}\n    answer={answer}\n    onAnswerClick={onAnswerClick}\n    state={state ? state[answer.id] : null}\n    />\n  )\n\n  return(\n    <ul className={'answer-list'}>\n      { answersList }\n    </ul>\n    )\n}\n","import React from 'react';\nimport './ActiveQuiz.css';\nimport { AnswersList } from \"./AnswersList/AnswersList\";\n\nexport const ActiveQuiz = (props) => {\n\n  const {\n    answers,\n    question,\n    onAnswerClick,\n    quizLength,\n    answerNumber,\n    stateAnswer,\n  } = props;\n\n  return (\n    <div className={'active-quiz'}>\n\n      <p className={'question'}>\n        <span>\n          <strong>{answerNumber + 1}.</strong> &nbsp;\n          { question }\n        </span>\n        <small>{answerNumber + 1} из {quizLength}</small>\n      </p>\n\n      <AnswersList\n        state={ stateAnswer }\n        answers={ answers }\n        onAnswerClick={ onAnswerClick }\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport './FinishedQuiz.css';\nimport Button from \"../../UI/Button/Button\";\nimport {Link} from \"react-router-dom\";\n\n\nexport const FinishedQuiz = ({result, quiz, onRetry}) => {\n  //считаем кол-во правильных ответов\n  const successCount = Object.keys(result).reduce((total, key) => {\n    if(result[key] === 'success') total++;\n\n    return total;\n  }, 0)\n\n  const resultsBody = () => quiz.map((quizItem, index) => {\n    const error = result[quizItem.id] === 'error';\n\n    const iconClassName = [\n      'fa',\n       error ? 'fa-times' : 'fa-check',\n      'finished-quiz__icon',\n      `finished-quiz__icon_${error ? 'error' : 'success'}`\n    ].join(' ')\n\n    return (\n      <li key={index}>\n        <strong>{index + 1}</strong>.&nbsp;\n        {quizItem.question}\n        <i className={iconClassName} />\n      </li>\n    )\n  })\n\n  return(\n    <div className=\"finished-quiz\">\n      <ul className={'finished-quiz__items'}>\n        {resultsBody()}\n      </ul>\n\n      <p>\n        Правильно {successCount} из {quiz.length}\n      </p>\n\n      <div>\n\n        <Button\n          onClick={onRetry}\n          type={'primary'}\n        >Повторить</Button>\n\n        <Link to={'/'}>\n          <Button\n            onClick={onRetry}\n            type={'success'}\n          >Перейти в список тестов</Button>\n        </Link>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport './Quiz.css';\nimport { ActiveQuiz}  from \"../../components/ActiveQuiz/ActiveQuiz\";\nimport { FinishedQuiz } from \"../../components/FinishedQuiz/FinishedQuiz\";\n\n\nexport const Quiz = () => {\n  const [quiz, setQuiz] = useState([{\n      question: 'В каком году представили JS?',\n      rightAnswerId: 3,\n      id: 1,\n      answers: [\n        { text: '1998', id: 1 },\n        { text: '1997', id: 2 },\n        { text: '1995', id: 3 },\n        { text: '1992', id: 4 },\n      ]},\n    {\n      question: 'В каком выпустили React?',\n      rightAnswerId: 2,\n      id: 2,\n      answers: [\n        { text: '2011', id: 1 },\n        { text: '2013', id: 2 },\n        { text: '2012', id: 3 },\n        { text: '2009', id: 4 },\n      ]}\n  ]);\n\n  //state для перехода к новому вопросу\n  const [activeQuestion, setActiveQuestion] = useState(0);\n  //state для определения правильного ответа, для перехода к следующему вопросу\n  const [answerState, setAnswerState] = useState({});\n  //state для определения, что весь Quiz пройден\n  const [isFinished, setIsFinished] = useState(false);\n  //собираем статистику\n  const [result, setResult] = useState({});\n\n  //определяем последний вопрос\n  const isQuizFinished = () =>  activeQuestion + 1 === quiz.length;\n\n  const onAnswerClickHandler = answerId => {\n    //проверка на существование значения success в ключе\n    const key = Object.keys(answerState)\n    if(answerState[key] === 'success') return;\n\n    //получаем текущий вопрос\n    const question = quiz[activeQuestion];\n\n    //сравниваем правильный ответ с id ответа\n    if ( question.rightAnswerId ===  answerId) {\n      setAnswerState({\n        [answerId]: 'success',\n      })\n\n      //если в result значений нет - значит 'success' с первой попытки\n      if(!result[question.id]) setResult(prevState => ({\n        ...prevState,\n        [question.id]: 'success',\n      }))\n\n      //переходим к следующему вопросу и обнуляем stateAnswer\n      const timeout = window.setTimeout(() => {\n        if (isQuizFinished()) {\n          setIsFinished(true);\n        } else {\n          setActiveQuestion(prevState => prevState + 1);\n          setAnswerState({});\n        }\n\n      window.clearTimeout(timeout);\n      }, 1000)\n    } else {\n      setAnswerState({\n        [answerId]: 'error',\n      })\n\n      setResult(prevState => ({\n        ...prevState,\n        [question.id]: 'error',\n      }))\n    }\n  }\n\n const onRetryHandler = () => {\n   setActiveQuestion(0);\n   setResult(0);\n   setIsFinished(false);\n   setAnswerState({});\n }\n\n  return (\n    <div className={'quiz'}>\n      <div className={'quiz__wrapper'}>\n        <h1 className={'quiz__title'}>Ответьте на все вопросы</h1>\n        {\n          isFinished\n          ? <FinishedQuiz\n             result={result}\n             quiz={quiz}\n             onRetry={onRetryHandler}\n            />\n            :<ActiveQuiz\n              answers={ quiz[activeQuestion].answers }\n              question={ quiz[activeQuestion].question }\n              onAnswerClick={onAnswerClickHandler}\n              quizLength={quiz.length}\n              answerNumber={activeQuestion}\n              stateAnswer={answerState}\n            />\n        }\n      </div>\n\n    </div>\n  );\n}\n","import React from \"react\";\nimport './MenuToggle.css';\nimport Button from \"../../UI/Button/Button\";\n\nexport const MenuToggle = ({ onToggle, isOpen }) => {\n  const menuBtnClassName = [\n    'menu-toggle',\n    'fa',\n  ]\n    isOpen ? menuBtnClassName.push('fa-times menu-toggle_opened'): menuBtnClassName.push('fa-bars');\n\n  return(\n    <Button\n      className={menuBtnClassName.join(' ')}\n      onClick={onToggle}\n    >\n\n    </Button>\n  );\n}\n","import React from 'react';\nimport './Backdrop.css';\n\nexport const Backdrop = ({onClick,}) => {\n\n  return(\n    <div\n      className={'backdrop'}\n      onClick={onClick}\n    ></div>\n  );\n}\n","import React from \"react\";\nimport './Drawer.css';\nimport { Backdrop } from \"../../UI/Backdrop/Backdrop\";\nimport { NavLink } from \"react-router-dom\";\n\nconst links = [\n  {to: '/', label: 'Список', exact: true},\n  {to: '/auth', label: 'Авторизация', exact: true},\n  {to: '/quiz-creator', label: 'Создать тест', exact: true},\n];\n\nexport const Drawer = ({isOpen, onClose}) => {\n\n  const renderLinks = links.map((link, index) => {\n    return (\n      <li\n        key={index}\n        className={'drawer__item'}\n      >\n        <NavLink\n          to={link.to}\n          exact={link.exact}\n          activeClassName={'active'}\n          className={'drawer__link'}\n          onClick={onClose}\n        >{link.label}</NavLink>\n      </li>\n    )\n  })\n\n  return (\n    <>\n      <nav className={`drawer ${isOpen || 'drawer__close'}`}>\n        <ul className=\"drawer__items\">\n          {renderLinks}\n        </ul>\n      </nav>\n      {isOpen && <Backdrop onClick={onClose} />}\n    </>\n  );\n}\n","import React, {useState} from 'react'\nimport './Layout.css'\nimport { MenuToggle } from \"../../components/MenuToggle/MenuToggle\";\nimport { Drawer } from \"../../components/Drawer/Drawer\";\n\nexport const Layout = ({children}) => {\n  const [isOpened, setIsOpened] = useState(false);\n\n  const toggleMenuHandler = () => setIsOpened(!isOpened);\n\n  return (\n    <div className={'layout'}>\n      <Drawer\n        isOpen={isOpened}\n        onClose={toggleMenuHandler}\n      />\n      <MenuToggle\n        isOpen={isOpened}\n        onToggle={toggleMenuHandler}\n      />\n      <main className={'layout__context'}>\n        { children }\n      </main>\n    </div>\n  )\n}\n\n\n","import React from 'react';\nimport './QuizList.css';\nimport { NavLink } from \"react-router-dom\";\n\nexport const QuizList = () => {\n\n  const renderQuizes = () => {\n    return [1, 2, 3].map((quiz, index) => {\n      return (<li\n        className={'quiz-list__item'}\n        key={index}\n      >\n        <NavLink\n          className={'quiz-list__link'}\n          to={'./quiz/' + quiz}\n        >\n          Тест {quiz}\n        </NavLink>\n      </li>)\n    })\n  }\n\n  return (\n    <div className={'quiz-list'}>\n      <div>\n        <h1 className={'quiz-list__title'}>Список тестов</h1>\n        <ul className={'quiz-list__items'}>\n          {renderQuizes()}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Auth } from \"./containers/Auth/Auth\";\nimport { QuizCreator } from \"./containers/QuizCreator/QuizCreator\";\nimport { Quiz } from \"./containers/Quiz/Quiz\";\nimport { Layout } from \"./hocs/Layout/Layout\";\nimport { QuizList } from \"./containers/QuizList/QuizList\";\nimport { Route, Switch } from \"react-router-dom\";\n\n\nexport const App = () => {\n  return (\n    <Layout>\n      <Switch>\n\n        <Route path={'/auth'}>\n          <Auth/>\n        </Route>\n\n        <Route path={'/quiz-creator'}>\n          <QuizCreator/>\n        </Route>\n\n        <Route path={'/quiz/:id'}>\n          <Quiz/>\n        </Route>\n\n        <Route path={'/'}>\n          <QuizList/>\n        </Route>\n\n      </Switch>\n    </Layout>\n  );\n}\n\n","import React from 'react';\nimport './index.css';\nimport ReactDOM from 'react-dom';\nimport { App } from './App.js';\nimport { HashRouter as Router } from 'react-router-dom';\n\nconst app = (<Router>\n  <App />\n</Router>)\n\nReactDOM.render(\n  <React.StrictMode>\n    { app }\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}